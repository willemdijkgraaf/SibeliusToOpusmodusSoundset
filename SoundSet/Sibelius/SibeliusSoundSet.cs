//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

namespace SoundSet.Sibelius
{ // 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [XmlRoot("SoundSet", Namespace="", IsNullable=false)]
    public partial class SibeliusSoundSetType {
    
        private HeaderType headerField;
    
        private ControllerTypeDefinitionType[] controllerTypeListField;
    
        private VolumeTypeDefinitionType[] volumeTypeListField;
    
        private AttackTypeListType attackTypeListField;
    
        private SwitchTypeDefinitionType[] switchTypeListField;
    
        private PatchType[] patchListField;
    
        private DrumMapDefinitionType[] drumMapListField;
    
        /// <remarks/>
        public HeaderType Header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("ControllerTypeDefinition", IsNullable=false)]
        public ControllerTypeDefinitionType[] ControllerTypeList {
            get {
                return this.controllerTypeListField;
            }
            set {
                this.controllerTypeListField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("VolumeTypeDefinition", IsNullable=false)]
        public VolumeTypeDefinitionType[] VolumeTypeList {
            get {
                return this.volumeTypeListField;
            }
            set {
                this.volumeTypeListField = value;
            }
        }
    
        /// <remarks/>
        public AttackTypeListType AttackTypeList {
            get {
                return this.attackTypeListField;
            }
            set {
                this.attackTypeListField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("SwitchTypeDefinition", IsNullable=false)]
        public SwitchTypeDefinitionType[] SwitchTypeList {
            get {
                return this.switchTypeListField;
            }
            set {
                this.switchTypeListField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("Patch", IsNullable=false)]
        public PatchType[] PatchList {
            get {
                return this.patchListField;
            }
            set {
                this.patchListField = value;
            }
        }
    
        /// <remarks/>
        [XmlArrayItem("DrumMapDefinition", IsNullable=false)]
        public DrumMapDefinitionType[] DrumMapList {
            get {
                return this.drumMapListField;
            }
            set {
                this.drumMapListField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HeaderType {
    
        private int fileVersionField;
    
        private string nameField;
    
        private string patchLoadMechanismField;
    
        private sbyte numLanesField;
    
        private string defaultSoundSetField;
    
        private sbyte programsRelativeToField;
    
        private string supportsPitchBendRangeField;
    
        /// <remarks/>
        public int FileVersion {
            get {
                return this.fileVersionField;
            }
            set {
                this.fileVersionField = value;
            }
        }
    
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        public string PatchLoadMechanism {
            get {
                return this.patchLoadMechanismField;
            }
            set {
                this.patchLoadMechanismField = value;
            }
        }
    
        /// <remarks/>
        public sbyte NumLanes {
            get {
                return this.numLanesField;
            }
            set {
                this.numLanesField = value;
            }
        }
    
        /// <remarks/>
        public string DefaultSoundSet {
            get {
                return this.defaultSoundSetField;
            }
            set {
                this.defaultSoundSetField = value;
            }
        }
    
        /// <remarks/>
        public sbyte ProgramsRelativeTo {
            get {
                return this.programsRelativeToField;
            }
            set {
                this.programsRelativeToField = value;
            }
        }
    
        /// <remarks/>
        public string SupportsPitchBendRange {
            get {
                return this.supportsPitchBendRangeField;
            }
            set {
                this.supportsPitchBendRangeField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartSwitchType {
    
        private string isMultipleNoteSampleField;
    
        private string valueField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string IsMultipleNoteSample {
            get {
                return this.isMultipleNoteSampleField;
            }
            set {
                this.isMultipleNoteSampleField = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrumSoundType {
    
        private StartSwitchType startSwitchField;
    
        private string[] textField;
    
        private sbyte pitchField;
    
        private bool pitchFieldSpecified;
    
        private string soundIDField;
    
        private string nameField;
    
        /// <remarks/>
        public StartSwitchType StartSwitch {
            get {
                return this.startSwitchField;
            }
            set {
                this.startSwitchField = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public sbyte Pitch {
            get {
                return this.pitchField;
            }
            set {
                this.pitchField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool PitchSpecified {
            get {
                return this.pitchFieldSpecified;
            }
            set {
                this.pitchFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string SoundID {
            get {
                return this.soundIDField;
            }
            set {
                this.soundIDField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrumMapDefinitionType {
    
        private DrumSoundType[] drumSoundField;
    
        private string nameField;
    
        /// <remarks/>
        [XmlElement("DrumSound")]
        public DrumSoundType[] DrumSound {
            get {
                return this.drumSoundField;
            }
            set {
                this.drumSoundField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatchType {
    
        private object[] itemsField;
    
        private ItemsChoiceType[] itemsElementNameField;
    
        private string nameField;
    
        /// <remarks/>
        [XmlElement("AttackType", typeof(string))]
        [XmlElement("DrumMap", typeof(string))]
        [XmlElement("PitchBendRange", typeof(sbyte))]
        [XmlElement("SoundID", typeof(string))]
        [XmlElement("SwitchType", typeof(string))]
        [XmlElement("VolumeType", typeof(string))]
        [XmlChoiceIdentifier("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("ItemsElementName")]
        [XmlIgnore()]
        public ItemsChoiceType[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [XmlType(IncludeInSchema=false)]
    public enum ItemsChoiceType {
    
        /// <remarks/>
        AttackType,
    
        /// <remarks/>
        DrumMap,
    
        /// <remarks/>
        PitchBendRange,
    
        /// <remarks/>
        SoundID,
    
        /// <remarks/>
        SwitchType,
    
        /// <remarks/>
        VolumeType,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControllerSwitchType {
    
        private string nameField;
    
        private sbyte valueField;
    
        private bool valueFieldSpecified;
    
        private string value1Field;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public sbyte Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string Value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeySwitchType {
    
        private sbyte keyField;
    
        private bool keyFieldSpecified;
    
        private string valueField;
    
        /// <remarks/>
        [XmlAttribute()]
        public sbyte Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool KeySpecified {
            get {
                return this.keyFieldSpecified;
            }
            set {
                this.keyFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchType {
    
        private KeySwitchType[] keySwitchField;
    
        private ControllerSwitchType[] controllerSwitchField;
    
        private string volumeTypeField;
    
        private string attackTypeField;
    
        private string soundIDChangeField;
    
        private string isMultipleNoteSampleField;
    
        /// <remarks/>
        [XmlElement("KeySwitch")]
        public KeySwitchType[] KeySwitch {
            get {
                return this.keySwitchField;
            }
            set {
                this.keySwitchField = value;
            }
        }
    
        /// <remarks/>
        [XmlElement("ControllerSwitch")]
        public ControllerSwitchType[] ControllerSwitch {
            get {
                return this.controllerSwitchField;
            }
            set {
                this.controllerSwitchField = value;
            }
        }
    
        /// <remarks/>
        public string VolumeType {
            get {
                return this.volumeTypeField;
            }
            set {
                this.volumeTypeField = value;
            }
        }
    
        /// <remarks/>
        public string AttackType {
            get {
                return this.attackTypeField;
            }
            set {
                this.attackTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string SoundIDChange {
            get {
                return this.soundIDChangeField;
            }
            set {
                this.soundIDChangeField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string IsMultipleNoteSample {
            get {
                return this.isMultipleNoteSampleField;
            }
            set {
                this.isMultipleNoteSampleField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchTypeDefinitionType {
    
        private SwitchType[] switchField;
    
        private string nameField;
    
        /// <remarks/>
        [XmlElement("Switch")]
        public SwitchType[] Switch {
            get {
                return this.switchField;
            }
            set {
                this.switchField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttackTypeDefinitionType {
    
        private string nameField;
    
        private string methodField;
    
        private string valueField;
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AttackTypeListType {
    
        private AttackTypeDefinitionType attackTypeDefinitionField;
    
        /// <remarks/>
        public AttackTypeDefinitionType AttackTypeDefinition {
            get {
                return this.attackTypeDefinitionField;
            }
            set {
                this.attackTypeDefinitionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VolumeTypeDefinitionType {
    
        private string controllerTypeField;
    
        private string[] textField;
    
        private string nameField;
    
        private string methodField;
    
        /// <remarks/>
        public string ControllerType {
            get {
                return this.controllerTypeField;
            }
            set {
                this.controllerTypeField = value;
            }
        }
    
        /// <remarks/>
        [XmlText()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ControllerTypeDefinitionType {
    
        private sbyte controllerOnField;
    
        private bool controllerOnFieldSpecified;
    
        private sbyte controllerOffField;
    
        private bool controllerOffFieldSpecified;
    
        private sbyte controllerDefaultField;
    
        private string nameField;
    
        private sbyte numberField;
    
        private bool numberFieldSpecified;
    
        private string binaryField;
    
        /// <remarks/>
        public sbyte ControllerOn {
            get {
                return this.controllerOnField;
            }
            set {
                this.controllerOnField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ControllerOnSpecified {
            get {
                return this.controllerOnFieldSpecified;
            }
            set {
                this.controllerOnFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        public sbyte ControllerOff {
            get {
                return this.controllerOffField;
            }
            set {
                this.controllerOffField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool ControllerOffSpecified {
            get {
                return this.controllerOffFieldSpecified;
            }
            set {
                this.controllerOffFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        public sbyte ControllerDefault {
            get {
                return this.controllerDefaultField;
            }
            set {
                this.controllerDefaultField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public sbyte Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
    
        /// <remarks/>
        [XmlIgnore()]
        public bool NumberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
    
        /// <remarks/>
        [XmlAttribute()]
        public string Binary {
            get {
                return this.binaryField;
            }
            set {
                this.binaryField = value;
            }
        }
    }
}